#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ /token –Ω–∞ voice.eblusha.org
"""

import http.server
import socketserver
import os
import urllib.request
import urllib.parse
import json
from urllib.error import HTTPError, URLError

class CORSProxyHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –∫ /token - –ø—Ä–æ–∫—Å–∏—Ä—É–µ–º –Ω–∞ voice.eblusha.org
        if self.path.startswith('/token'):
            self.proxy_token_request()
        else:
            # –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
            super().do_GET()
    
    def proxy_token_request(self):
        try:
            # –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
            parsed_url = urllib.parse.urlparse(self.path)
            query_params = urllib.parse.parse_qs(parsed_url.query)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è
            proxy_url = f"https://voice.eblusha.org{self.path}"
            
            # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É
            req = urllib.request.Request(proxy_url)
            req.add_header('User-Agent', 'Eblusha-Proxy/1.0')
            
            with urllib.request.urlopen(req) as response:
                data = response.read()
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å CORS –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
                self.send_response(200)
                self.send_header('Content-Type', 'application/json')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
                self.send_header('Access-Control-Allow-Headers', 'Content-Type')
                self.end_headers()
                self.wfile.write(data)
                
        except HTTPError as e:
            self.send_error(e.code, f"Proxy error: {e.reason}")
        except URLError as e:
            self.send_error(502, f"Proxy connection error: {e.reason}")
        except Exception as e:
            self.send_error(500, f"Proxy internal error: {str(e)}")
    
    def do_OPTIONS(self):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight –∑–∞–ø—Ä–æ—Å–æ–≤
        self.send_response(200)
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        self.end_headers()

def run_proxy_server(port=8080):
    """–ó–∞–ø—É—Å–∫ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞"""
    # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –∫–æ—Ä–µ–Ω—å —Å—Ç–∞—Ç–∏–∫–∏ ‚Äî –ø–∞–ø–∫–∞ —Ä—è–¥–æ–º —Å —ç—Ç–∏–º —Ñ–∞–π–ª–æ–º
    web_root = os.path.dirname(os.path.abspath(__file__))
    os.chdir(web_root)

    with socketserver.TCPServer(("", port), CORSProxyHandler) as httpd:
        print(f"üöÄ –ü—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:{port}")
        print(f"üì° –ü—Ä–æ–∫—Å–∏—Ä—É–µ—Ç /token –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ https://voice.eblusha.org")
        print(f"üåê CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤–∫–ª—é—á–µ–Ω—ã")
        print(f"‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    run_proxy_server()
